.model small
.stack 100
.data

	displayBN db 13, 10, "___________________________"
    		  db 13, 10, "::Welcome to BONUS Module::"
    		  db 13, 10, "___________________________",13,10,"$"
    
    	exitBN db 13, 10, "__________________________"
    	       db 13, 10, "::Exit BONUS Module ::"
    	       db 13, 10, "__________________________$"

  	;gross pay
	BONUS_GET DB 10,13,"Bonus ? (YES=y/NO=n) :$"
	PROMPTBONUSRATE DB 10,13,"Enter Bonus Rate (00.0-20.0)% :$" 
   	BONUSRATES DB 2 DUP(0)
	RATESPOINT DB '.'
	BONUSRATEDECI DB 2 DUP(?)
	BONUS_RATE DB ?
	BONUS_RATEDEC DB ?

	SUCCESS DB 10,13,"Success key-in !$"
	WRBONUSRATE DB 10,13,"Wrong Rate!!! Please key in rate in (00-20)% only!$"
	nline DB 10,13,"$" 
	CONFIRM_BNRATE DB 10,13,"Confirm BONUS Rate(y/n):$"
	ERRYESNO DB 10,13,"Please enter y or n only !!!$"
	DISBN DB 10,13,"BONUS  : RM$"
	DECIMAL DB 0
	
	;BONUS
	TOTALGP DW ? 		;TEMP TOTAL GROSS P
	TOTALBN DW ?
	TOTALBNDEC DB ? 	;DECIMAL BONUS
	TOTALBNDIS DB 6 DUP(0)
	; Constants
    	YES equ 'y'
    	NO equ 'n'
.code
main proc
	mov ax,@data
	mov ds,ax
	
	MOV AH,09H
	LEA DX,displayBN
	INT 21H

BNCONFIRM:
	;DISPLAY GROSS PAY CONFIRM 
	MOV AH,09H
	LEA DX,BONUS_GET
	INT 21H
	
	MOV AH,01H
	INT 21H
	CMP AL,YES
	JE  GETBONUS
	CMP AL,NO
	JE  EXIT
	JMP ERRBN
	
GETBONUS:	
	;clear screen
		
	;GET BONUS RATE
	MOV AH,09H
	LEA DX,PROMPTBONUSRATE
	INT 21H

	MOV CX,2
	MOV SI,0
	CALL BONUSL

	;CHECK BONUS RATE
	CMP BONUS_RATE,0
	JL  XBNRANGE
	CMP BONUS_RATE,20
	JG  XBNRANGE
	CMP BONUS_RATEDEC,0
	JL  XBNRANGE
	CMP BONUS_RATEDEC,99
	JG  XBNRANGE
	JMP CORRECT
	
XBNRANGE:
	;DISPALY ERROR MESSAGES (BONUS)
	MOV AH,09H
	LEA DX,WRBONUSRATE
	INT 21H
BACKBONUS:
	JMP GETBONUS

;*
EXIT:
	MOV AH,09H
	LEA DX,EXITBN
	INT 21H
	MOV AH,4CH
	INT 21H
;*

ERRBN:
	MOV AH,09H
	LEA DX,ERRYESNO
	INT 21H
	JMP BNCONFIRM

CORRECT:
	;DISPLAY CORRECT
	MOV AH,09H
	LEA DX,SUCCESS
	INT 21H

CONFIRMRATE:
	;CONFIRMATION
    	MOV AH,09H
    	LEA DX,CONFIRM_BNRATE 
    	INT 21H

   	MOV AH,01H
    	INT 21H
    	CMP AL,YES
   	JE  BONUSCAL	 	;YES - CAL BONUS
    	CMP AL,NO
   	JE  BACKBONUS		;IF NO - BACK START OF BONUS MODULE
   	JMP ERRCONFIRMRATE

ERRCONFIRMRATE:
	MOV AH,09H
	LEA DX,ERRYESNO		
	INT 21H
	JMP CONFIRMRATE

BONUSCAL:
	MOV AX,0
	MOV DX,0
	MOV BX,0
	;TOTAL GROSS PAY
	MOV TOTALGP,3800  	;3800 = 0ED8 H
	
	;GET BONUS BY MUL BONUS RATE
    	MOV AX,TOTALGP		;AL = 0ED8 H(TOTAL GP)
	MOV BX,100
	DIV BX       		;AL = 3800 (0ED8 H) / 100 = 38 (26 H)
	MUL BONUS_RATE		;RM38 X 18 = RM 684 (2AC H)
	MOV TOTALBN,AX 		;TOTAL BONUS PAY = 684 

	MOV AX,0
	MOV AX,TOTALGP		;AL = 0ED8 H(TOTAL GP)
	MOV BX,100
	DIV BX       		;AL = 3800 (0ED8 H) / 100 = 38 (26 H)
	MUL BONUS_RATEDEC	;RM38 X 28 = RM 1064 (428 H)
	DIV BX			;1064/100 = 10.64 AX=0010D (000A H) DX=0064D (0040 H)
	;TO STORE THE TOTAL BONUS PAY
	ADD TOTALBN,AX 		;TOTALBN + 10 = RM 694
	MOV TOTALBNDEC,DL	;TOTALBNDEC = 0.64
	
     	;DISPLAY BONUS PAY
	MOV AH,09H
	LEA DX,DISBN
	INT 21H
	
	;*IF BONUS PAY LARGE THAN 1000 (CHANGE!!!)*
	MOV AX,0
	MOV DX,0
	MOV AX,TOTALBN		;TOTAL BONUS PAY = 760 (02F8 H)
	MOV BX,100		;694/100 = 6.94(AH = 00 AL = 06 DL= 94 D)
	DIV BX
	MOV BL,10
	DIV BL			;AL = 00 H AH=06 H DL=94(53 H) DH=00 H
	MOV TOTALBNDIS[0],AL	
	MOV TOTALBNDIS[1],AH	
	MOV TOTALBNDIS[2],DL
	MOV TOTALBNDIS[3],DH
	
	;DISPLAY NUMBER 1 DIGIT
	MOV AH,02H
	MOV DL,TOTALBNDIS[0]
	ADD DL,30H
	INT 21H

	;DISPLAY NUMBER 2 DIGIT
	MOV AH,02H
	MOV DL,TOTALBNDIS[1]
	ADD DL,30H
	INT 21H
	
	MOV AX,0
	MOV AL,TOTALBNDIS[2] 	;AX = 0094
	DIV BL    		;94/10= 9.4 AL=09 AH=04
	MOV TOTALBNDIS[2],AL	;AL=09
	MOV TOTALBNDIS[3],AH	;AH=04
	

	;DISPLAY NUMBER 3 DIGIT
	MOV AH,02H
	MOV DL,TOTALBNDIS[2]
	ADD DL,30H
	INT 21H

	;DISPLAY NUMBER 4 DIGIT
	MOV AH,02H
	MOV DL,TOTALBNDIS[3]
	ADD DL,30H
	INT 21H

	;DISPLAY '.'
	MOV AH,02H
	MOV DL,RATESPOINT
	INT 21H

	;DISPLAY DECIMAL OF TOTAL BONUS
	MOV AX,0
	MOV AL,TOTALBNDEC ;64
	DIV BL		  ;BL =10 (0AH) 64/10=6.4 AL= 06,AH =04H
	MOV TOTALBNDIS[4],AL
	MOV TOTALBNDIS[5],AH
	
	;DISPLAY DECIMAL NUMBER OF TOTAL BONUS
	MOV AH,02H
	MOV DL,TOTALBNDIS[4]
	ADD DL,30H
	INT 21H

	MOV AH,02H
	MOV DL,TOTALBNDIS[5]
	ADD DL,30H
	INT 21H	

	MOV AH,02H
	MOV DL,DECIMAL
	ADD DL,30H
	INT 21H
	
EXIT2:
	MOV AH,09H
	LEA DX,EXITBN
	INT 21H
	MOV AH,4CH
	INT 21H
main endp
BONUSL:
	MOV AH,01H
	INT 21H
	SUB AL,30H
	MOV BONUSRATES[SI],AL
	INC SI
      LOOP BONUSL

	MOV AH,02H
	MOV DL,RATESPOINT
	INT 21H
	
	MOV CX,2
	MOV SI,0

BONUSDECINPUT:	
	MOV AH,01H
	INT 21H
	SUB AL,30H
	MOV BONUSRATEDECI[SI],AL
	INC SI
	LOOP BONUSDECINPUT	

	 ; Validate input NO DECIMAL
	MOV AX,0
	MOV DX,0
    	MOV AL,BONUSRATES[0]  	;AL = 02H 
    	MOV BL,10
    	MUL BL			;AL = 01 X 10 = 10(0A H)
	ADD AL,BONUSRATES[1]	;AL = 10 + 8 = 18(12 H)
	MOV BONUS_RATE,AL	;BONUS_RATE = 18 (12 H)

	; Validate input NO DECIMAL
	MOV AX,0
	MOV DX,0
    	MOV AL,BONUSRATEDECI[0] ;AL = 02H 
    	MOV BL,10
    	MUL BL			;AL = 02 X 10 = 20 (14 H)
	ADD AL,BONUSRATEDECI[1]	;AL = 20 + 8 = 28 (1C H)
	MOV BONUS_RATEDEC,AL	;BONUS_RATEDEC = 0
	RET
	end main

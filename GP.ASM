.model small
.stack 100
.data

	displayGP db 13, 10, "_______________________________"
    		  db 13, 10, "::Welcome to GROSS PAY Module::"
    		  db 13, 10, "_______________________________$"
    
    	exitGP db 13, 10, "__________________________"
    	       db 13, 10, "::Exit GROSS PAY Module ::"
    	       db 13, 10, "__________________________$"


  	;gross pay
	GROSS_PAY DB 10,13,"Gross Pay? (YES=y/NO=n) :$"
	PROMPTHOURRATE DB 10,13,"Enter Hour Rate RM(00-20):$" 
	PROMPTOTRATE DB 10,13,"Enter OT Rate RM(00-20):$"
   	HOURRATE DB 2 DUP(0)
	OTRATE DB 2 DUP(0)
	HOUR_RATES DB ?
	OT_RATES DB ?
	SUCCESS DB 10,13,"Success key-in !$"
	WRGRATE DB 10,13,"Wrong Rate!!! Please key-in rate in RM(0-20) only!$"
	nline DB 10,13,"$" 
	CONFIRM_RATE DB 10,13,"Confirm Hours and OT Rate(y/n):$"
	ERRYESNO DB 10,13,"Please enter y or n only !!!$"
	DISGP DB 10,13,"GROSS PAY  : RM$"
	DECIMAL DB ".000$"
	

	;temp OT & WH var
	TOTALWH DB ?
	OTHOUR DB ?
	TOTALWHPAY1 DB ?	;TO STORE TOTAL NORMAL WORK PAY (CAN USE DW TO 4 HEXA NUM)
	TOTALWHPAY2 DB ?
	TOTALOTPAY1 DB ?	;TO STORE TOTAL NORMAL OT PAY 
	TOTALOTPAY2 DB ?	
	TOTALGP DW ?   		;TOTAL OF GROSS PAY
	TOTALGPDIS DB 4 DUP(0)	;USE TO DISPLAY TOTAL OF GROSS PAY
	; Constants
    	YES equ 'y'
    	NO equ 'n'
.code
main proc
	mov ax,@data
	mov ds,ax
	
	MOV AH,09H
	LEA DX,displayGP
	INT 21H

GPCONFIRM:
	;DISPLAY GROSS PAY CONFIRM 
	MOV AH,09H
	LEA DX,GROSS_PAY
	INT 21H
	
	MOV AH,01H
	INT 21H
	CMP AL,YES
	JE  AGAIN
	CMP AL,NO
	JE  EXIT
	JMP ERRGP
	
AGAIN:	
	;clear screen
		
	;GET HOUR RATE
	MOV AH,09H
	LEA DX,PROMPTHOURRATE
	INT 21H

	MOV CX,2
	MOV SI,0
	CALL HOURR

	CMP HOUR_RATES,0
	JL  XRANGE1
	CMP HOUR_RATES,20
	JG  XRANGE1
	JMP AGAIN2
	
AGAIN2:
	;GET OT RATE
	MOV AH,09H
  	LEA DX,PROMPTOTRATE
 	INT 21H

	;OTRATE
	MOV CX,2
	MOV SI,0
	MOV AL,0
	CALL OTR
	
	CMP OT_RATES,0
	JL  XRANGE2
	CMP OT_RATES,20
	JG  XRANGE2
	JMP CORRECT
XRANGE1:
	;DISPALY ERROR MESSAGES
	MOV AH,09H
	LEA DX,WRGRATE
	INT 21H
	JMP AGAIN

XRANGE2:
	;DISPALY ERROR MESSAGES
	MOV AH,09H
	LEA DX,WRGRATE
	INT 21H
	JMP AGAIN2

EXIT:
	MOV AH,09H
	LEA DX,EXITGP
	INT 21H
	MOV AH,4CH
	INT 21H

;BACK START *

ERRGP:
	MOV AH,09H
	LEA DX,ERRYESNO
	INT 21H
	JMP GPCONFIRM

CORRECT:
	;DISPLAY CORRECT
	MOV AH,09H
	LEA DX,SUCCESS
	INT 21H

CONFIRMRATE:
	;CONFIRMATION
    	MOV AH,09H
    	LEA DX,CONFIRM_RATE 
    	INT 21H

   	MOV AH,01H
    	INT 21H
    	CMP AL,YES
   	JE  GROSSPAYCAL	 
    	CMP AL,NO
	;***
   	JE  EXIT
   	JMP ERRCONFIRMRATE

ERRCONFIRMRATE:
	MOV AH,09H
	LEA DX,ERRYESNO
	INT 21H
	JMP CONFIRMRATE

GROSSPAYCAL:
	;TRY
	MOV AX,0
	;TOTAL WORK HOUR
	MOV TOTALWH,190   	;190 = BE H
	MOV OTHOUR,10
     
    	MOV AL,TOTALWH
	SUB AL,OTHOUR       	;TOTALWH = 180 = B4H
	MUL HOUR_RATES 		;180 x 20 = 3600D B4 H X 14 H = E10
	MOV TOTALWHPAY1,AH 	;TOTALWH1 = 0E
	MOV TOTALWHPAY2,AL 	;TOTALWH2 = 10
	
	MOV AX,0
	MOV AL,OTHOUR 		;OTHOUR = 10 = 0AH
	MUL OT_RATES		;10 X 20 = 200 0A H X 14 H = C8 
	MOV TOTALOTPAY1,AL	;TOTALOTPAY = C8
	MOV TOTALOTPAY2,AH

	MOV AX,0
	MOV AH,TOTALWHPAY1	;AH = 0E H
	MOV AL,TOTALWHPAY2  	;AL = 10 H
	ADD AL,TOTALOTPAY1	;AX = E10 AL= 0AH = C8 H = D8 AX= ED8 H = 3800
	ADD AL,TOTALOTPAY2

	;TO STORE THE TOTAL GROSS PAY
	MOV TOTALGP,AX
	
     ;DISPLAY GROSS PAY
	MOV AH,09H
	LEA DX,DISGP
	INT 21H
	
	MOV AX,0
	MOV DX,0
	MOV AX,TOTALGP
	MOV BX,100
	;AX=3800/100 AL=38 DX=0000
	DIV BX
	;AL=38/10= 24 H AL=03 AH=08 DX=0000 
	MOV BL,10
	DIV BL
	MOV TOTALGPDIS[0],AL
	MOV TOTALGPDIS[1],AH
	MOV TOTALGPDIS[2],DL  ;60
	MOV TOTALGPDIS[3],DH
	
	;DISPLAY NUMBER 1 DIGIT
	MOV AH,02H
	MOV DL,TOTALGPDIS[0]
	ADD DL,30H
	INT 21H

	;DISPLAY NUMBER 2 DIGIT
	MOV AH,02H
	MOV DL,TOTALGPDIS[1]
	ADD DL,30H
	INT 21H
	
	MOV AX,0
	MOV AL,TOTALGPDIS[2] 	;AX = 0060
	DIV BL    		;AL=00 AH=00
	MOV TOTALGPDIS[2],AL	;AL=00
	MOV TOTALGPDIS[3],AH	;AH=00
	

	;DISPLAY NUMBER 3 DIGIT
	MOV AH,02H
	MOV DL,TOTALGPDIS[2]
	ADD DL,30H
	INT 21H

	;DISPLAY NUMBER 4 DIGIT
	MOV AH,02H
	MOV DL,TOTALGPDIS[3]
	ADD DL,30H
	INT 21H

	MOV AH,09H
	LEA DX,DECIMAL
	INT 21H
	
	JMP EXIT
main endp
HOURR:
	MOV AH,01H
	INT 21H
	SUB AL,30H
	MOV HOURRATE[SI],AL
	INC SI
      LOOP HOURR

	 ; Validate input
    	MOV AL, HOURRATE[0]
    	MOV DL, 10
    	MUL DL
    	ADD AL, HOURRATE[1]
    	MOV HOUR_RATES, AL

	RET

OTR:
	MOV AH,01H
	INT 21H
	SUB AL,30H
	MOV OTRATE[SI],AL
	INC SI
      LOOP OTR
	
	;VALIDATE
	MOV AL, OTRATE[0]
    	MOV DL, 10
    	MUL DL
    	ADD AL, OTRATE[1]
    	MOV OT_RATES, AL
	RET

	end main
	